#!/usr/bin/python2.7

__author__ = "Shilpesh Trivedi"
__copyright__ = "Copyright 2021, Shilpesh Trivedi"
__license__ = "Creative Commons Attribution-ShareAlike 4.0 International License."
__email__ = "tshilpesh@gmail.com"
__GitHub__ = "ShilpeshTrivedi"
__twitter__ = "@ShilpeshTrivedi"


import re
import sys
import json
import argparse
import requests

class MalwareBazzar_API():

    def __init__(self):
                    
        self.api = "" #Enter your MalwareBazzar API here
        self.url = "https://mb-api.abuse.ch/api/v1/"

    def malbazaarlookup(self,hash):

        report = open(hash+'_report.json','a')

        headers = {'API-KEY': self.api}

        data = {'query': 'get_info', 'hash': hash}

        response = requests.post(self.url, data=data)

        if response.json()["query_status"] == 'hash_not_found':

            print '\n',' \033[38;5;160m[-] The sample hash was not found on Malbazaar\033[0;0m','\n'

        else:

            response_json = response.json()["data"][0]

            print '\n','\033[38;5;120m[+] Malbazaar analysis report: \033[0;0m','\n'
            print '\033[38;5;110m'+json.dumps(response_json, indent = 3)+'\033[0;0m'

            report.write(str(json.dumps(response_json, indent = 3))+'\n')

    def malbazaardownload(self,hash):

        headers = {'API-KEY': self.api}

        data = {'query': 'get_file', 'sha256_hash': hash}

        response = requests.post(self.url, data=data, timeout=15, headers=headers, allow_redirects=True)

        if 'file_not_found' in response.text:

            print '\n',' \033[38;5;160m[-] The sample hash was not found on Malbazaar\033[0;0m','\n'

        else:

            open(hash+'.zip', 'wb').write(response.content)

            print '\n'," \033[38;5;115m[+] Sample "+hash+" downloaded. the password of file is","'infected'",'\n'

def check_sha256(s):

    if s == "":
        return

    if len(s) != 64:

        raise argparse.ArgumentTypeError(" \033[38;5;160m[-] Please use sha256 value instead of \033[0;0m'" + s + "'")

    return str(s)

def main():

    obj =  MalwareBazzar_API()

    parser = argparse.ArgumentParser(description='\033[38;5;120mLookup and Download a malware sample from Malware Bazaar.\033[0;0m')
    parser.add_argument("Hash", help="\033[38;5;135mEnter the Hash of the malware.\033[0;0m",type=check_sha256)
    parser.add_argument('-d', '--download', help='\033[38;5;140mDownloaded file, required SHA256 hash. \033[0;0m', action='store_true')
    parser.add_argument('-i', '--info', help='\033[38;5;140mGet information on a hash and store value in json format (do not download file). \033[0;0m', action='store_true')

    args = parser.parse_args()

    if len(sys.argv)<=2:
        
        parser.print_help()
        
        sys.exit(1)

    if args.info == True:

        obj.malbazaarlookup(str(args.Hash))

    if args.download == True:

        obj.malbazaardownload(str(args.Hash))

if __name__ == '__main__':
    main()
